{
  "version": 3,
  "sources": ["../../../src/browser/long.ts"],
  "sourcesContent": ["// Implements an unsigned long.\n// This is a subset of https://github.com/dcodeIO/Long.js\n// `| 0` assures the runtime that we are using integer arithmetic\n\n// This works... but don't try to compare one to a real Long.js Long!\n// For internal use only.\nexport class Long {\n  low: number;\n  high: number;\n  __isUnsignedLong__: boolean;\n\n  static isLong(obj: Long) {\n    return (obj && obj.__isUnsignedLong__) === true;\n  }\n\n  constructor(low: number, high: number) {\n    this.low = low | 0;\n    this.high = high | 0;\n    this.__isUnsignedLong__ = true;\n  }\n\n  // prettier-ignore\n  static fromBytesLE(bytes: number[]): Long {\n    return new Long(\n      bytes[0] |\n      bytes[1] << 8 |\n      bytes[2] << 16 |\n      bytes[3] << 24,\n      bytes[4] |\n      bytes[5] << 8 |\n      bytes[6] << 16 |\n      bytes[7] << 24,\n    );\n  }\n\n  // prettier-ignore\n  toBytesLE() {\n    const hi = this.high;\n    const lo = this.low;\n    return [\n      lo & 0xff,\n      lo >>> 8 & 0xff,\n      lo >>> 16 & 0xff,\n      lo >>> 24,\n      hi & 0xff,\n      hi >>> 8 & 0xff,\n      hi >>> 16 & 0xff,\n      hi >>> 24\n    ];\n  }\n\n  static fromNumber(value: number) {\n    if (isNaN(value)) return UZERO;\n    if (value < 0) return UZERO;\n    if (value >= TWO_PWR_64_DBL) return MAX_UNSIGNED_VALUE;\n    return new Long(value % TWO_PWR_32_DBL | 0, (value / TWO_PWR_32_DBL) | 0);\n  }\n\n  equals(other: Long) {\n    if (!Long.isLong(other)) other = Long.fromValue(other);\n    if (this.high >>> 31 === 1 && other.high >>> 31 === 1) return false;\n    return this.high === other.high && this.low === other.low;\n  }\n\n  notEquals(other: Long) {\n    return !this.equals(other);\n  }\n\n  comp(other: Long) {\n    if (!Long.isLong(other)) other = Long.fromValue(other);\n    if (this.equals(other)) return 0;\n    return other.high >>> 0 > this.high >>> 0 ||\n      (other.high === this.high && other.low >>> 0 > this.low >>> 0)\n      ? -1\n      : 1;\n  }\n\n  lessThanOrEqual(other: Long) {\n    return this.comp(/* validates */ other) <= 0;\n  }\n\n  static fromValue(val: any) {\n    if (typeof val === \"number\") return Long.fromNumber(val);\n    // Throws for non-objects, converts non-instanceof Long:\n    return new Long(val.low, val.high);\n  }\n}\n\nconst UZERO = new Long(0, 0);\nconst TWO_PWR_16_DBL = 1 << 16;\nconst TWO_PWR_32_DBL = TWO_PWR_16_DBL * TWO_PWR_16_DBL;\nconst TWO_PWR_64_DBL = TWO_PWR_32_DBL * TWO_PWR_32_DBL;\nconst MAX_UNSIGNED_VALUE = new Long(0xffffffff | 0, 0xffffffff | 0);\n"],
  "mappings": ";AAMO,aAAM,KAAK;AAAA,EAKhB,OAAO,OAAO,KAAW;AACvB,YAAQ,OAAO,IAAI,wBAAwB;AAAA,EAC7C;AAAA,EAEA,YAAY,KAAa,MAAc;AACrC,SAAK,MAAM,MAAM;AACjB,SAAK,OAAO,OAAO;AACnB,SAAK,qBAAqB;AAAA,EAC5B;AAAA,EAGA,OAAO,YAAY,OAAuB;AACxC,WAAO,IAAI;AAAA,MACT,MAAM,KACN,MAAM,MAAM,IACZ,MAAM,MAAM,KACZ,MAAM,MAAM;AAAA,MACZ,MAAM,KACN,MAAM,MAAM,IACZ,MAAM,MAAM,KACZ,MAAM,MAAM;AAAA,IACd;AAAA,EACF;AAAA,EAGA,YAAY;AACV,UAAM,KAAK,KAAK;AAChB,UAAM,KAAK,KAAK;AAChB,WAAO;AAAA,MACL,KAAK;AAAA,MACL,OAAO,IAAI;AAAA,MACX,OAAO,KAAK;AAAA,MACZ,OAAO;AAAA,MACP,KAAK;AAAA,MACL,OAAO,IAAI;AAAA,MACX,OAAO,KAAK;AAAA,MACZ,OAAO;AAAA,IACT;AAAA,EACF;AAAA,EAEA,OAAO,WAAW,OAAe;AAC/B,QAAI,MAAM,KAAK;AAAG,aAAO;AACzB,QAAI,QAAQ;AAAG,aAAO;AACtB,QAAI,SAAS;AAAgB,aAAO;AACpC,WAAO,IAAI,KAAK,QAAQ,iBAAiB,GAAI,QAAQ,iBAAkB,CAAC;AAAA,EAC1E;AAAA,EAEA,OAAO,OAAa;AAClB,QAAI,CAAC,KAAK,OAAO,KAAK;AAAG,cAAQ,KAAK,UAAU,KAAK;AACrD,QAAI,KAAK,SAAS,OAAO,KAAK,MAAM,SAAS,OAAO;AAAG,aAAO;AAC9D,WAAO,KAAK,SAAS,MAAM,QAAQ,KAAK,QAAQ,MAAM;AAAA,EACxD;AAAA,EAEA,UAAU,OAAa;AACrB,WAAO,CAAC,KAAK,OAAO,KAAK;AAAA,EAC3B;AAAA,EAEA,KAAK,OAAa;AAChB,QAAI,CAAC,KAAK,OAAO,KAAK;AAAG,cAAQ,KAAK,UAAU,KAAK;AACrD,QAAI,KAAK,OAAO,KAAK;AAAG,aAAO;AAC/B,WAAO,MAAM,SAAS,IAAI,KAAK,SAAS,KACrC,MAAM,SAAS,KAAK,QAAQ,MAAM,QAAQ,IAAI,KAAK,QAAQ,IAC1D,KACA;AAAA,EACN;AAAA,EAEA,gBAAgB,OAAa;AAC3B,WAAO,KAAK,KAAqB,KAAK,KAAK;AAAA,EAC7C;AAAA,EAEA,OAAO,UAAU,KAAU;AACzB,QAAI,OAAO,QAAQ;AAAU,aAAO,KAAK,WAAW,GAAG;AAEvD,WAAO,IAAI,KAAK,IAAI,KAAK,IAAI,IAAI;AAAA,EACnC;AACF;AAEA,MAAM,QAAQ,IAAI,KAAK,GAAG,CAAC;AAC3B,MAAM,iBAAiB,KAAK;AAC5B,MAAM,iBAAiB,iBAAiB;AACxC,MAAM,iBAAiB,iBAAiB;AACxC,MAAM,qBAAqB,IAAI,KAAK,aAAa,GAAG,aAAa,CAAC;",
  "names": []
}
