{
  "version": 3,
  "sources": ["../../../src/bundler/index.ts"],
  "sourcesContent": ["import path from \"path\";\nimport chalk from \"chalk\";\nimport esbuild from \"esbuild\";\nimport { Filesystem } from \"./fs.js\";\nexport { nodeFs, RecordingFs } from \"./fs.js\";\nexport type { Filesystem } from \"./fs.js\";\n\nexport const actionsDir = \"actions\";\n\n// Returns a generator of { isDir, path } for all paths\n// within dirPath in some topological order (not including\n// dirPath itself).\nexport function* walkDir(\n  fs: Filesystem,\n  dirPath: string\n): Generator<{ isDir: boolean; path: string }, void, void> {\n  for (const dirEntry of fs.listDir(dirPath)) {\n    const childPath = path.join(dirPath, dirEntry.name);\n    if (dirEntry.isDirectory()) {\n      yield { isDir: true, path: childPath };\n      yield* walkDir(fs, childPath);\n    } else if (dirEntry.isFile()) {\n      yield { isDir: false, path: childPath };\n    }\n  }\n}\n\nexport interface Bundle {\n  path: string;\n  source: string;\n  sourceMap?: string;\n}\n\nexport class BundleError extends Error {}\n\ntype EsBuildResult = esbuild.BuildResult & {\n  outputFiles: esbuild.OutputFile[];\n};\n\nasync function doEsbuild(\n  fs: Filesystem,\n  dir: string,\n  entryPoints: string[],\n  generateSourceMaps: boolean,\n  platform: esbuild.Platform,\n  chunksFolder: string\n): Promise<EsBuildResult> {\n  try {\n    const result = await esbuild.build({\n      entryPoints,\n      bundle: true,\n      platform: platform,\n      format: \"esm\",\n      target: \"esnext\",\n      outdir: \"out\",\n      outbase: dir,\n      write: false,\n      sourcemap: generateSourceMaps,\n      splitting: true,\n      chunkNames: path.join(chunksFolder, \"[hash]\"),\n      treeShaking: true,\n      minify: false,\n      metafile: true,\n    });\n\n    for (const [relPath, input] of Object.entries(result.metafile!.inputs)) {\n      // TODO: esbuild outputs paths prefixed with \"(disabled)\"\" when bundling our internal\n      // udf-system package. The files do actually exist locally, though.\n      if (relPath.indexOf(\"(disabled):\") !== -1) {\n        continue;\n      }\n      const absPath = path.resolve(relPath);\n      const st = fs.stat(absPath);\n      if (st.size !== input.bytes) {\n        throw new Error(\n          `Bundled file ${absPath} changed right after esbuild invocation`\n        );\n      }\n      fs.registerPath(absPath, st);\n    }\n    return result;\n  } catch (err) {\n    throw new BundleError(`esbuild failed: ${(err as any).toString()}`);\n  }\n}\n\nexport async function bundle(\n  fs: Filesystem,\n  dir: string,\n  entryPoints: string[],\n  generateSourceMaps: boolean,\n  platform: esbuild.Platform,\n  chunksFolder = \"_deps\"\n): Promise<Bundle[]> {\n  const result = await doEsbuild(\n    fs,\n    dir,\n    entryPoints,\n    generateSourceMaps,\n    platform,\n    chunksFolder\n  );\n  if (result.errors.length) {\n    for (const error of result.errors) {\n      console.log(chalk.red(`esbuild error: ${error.text}`));\n    }\n    throw new BundleError(\"esbuild failed\");\n  }\n  for (const warning of result.warnings) {\n    console.log(chalk.yellow(`esbuild warning: ${warning.text}`));\n  }\n  const sourceMaps = new Map();\n  const modules: Bundle[] = [];\n  for (const outputFile of result.outputFiles) {\n    const relPath = path.relative(path.normalize(\"out\"), outputFile.path);\n    if (path.extname(relPath) === \".map\") {\n      sourceMaps.set(relPath, outputFile.text);\n      continue;\n    }\n    const posixRelPath = relPath.split(path.sep).join(path.posix.sep);\n    modules.push({ path: posixRelPath, source: outputFile.text });\n  }\n  for (const module of modules) {\n    const sourceMapPath = module.path + \".map\";\n    const sourceMap = sourceMaps.get(sourceMapPath);\n    if (sourceMap) {\n      module.sourceMap = sourceMap;\n    }\n  }\n  return modules;\n}\n\nexport async function bundleSchema(fs: Filesystem, dir: string) {\n  return bundle(fs, dir, [path.resolve(dir, \"schema.ts\")], true, \"neutral\");\n}\n\n// If you wanted to build regex patterns programatically (questionable but useful)\n// you need to escape special characters in it.\nfunction escapeRegex(s: string): string {\n  return s.replace(/[.*+?^${}()|[\\]\\\\]/g, \"\\\\$&\");\n}\n\nasync function entryPoints(\n  fs: Filesystem,\n  dir: string,\n  includePattern: RegExp,\n  verbose: boolean\n): Promise<string[]> {\n  const entryPoints = [];\n  for (const { isDir, path: fpath } of walkDir(fs, dir)) {\n    if (isDir) {\n      continue;\n    }\n    const relPath = path.relative(dir, fpath);\n    const base = path.parse(fpath).base;\n\n    const log = (line: string) => {\n      if (verbose) {\n        console.log(line);\n      }\n    };\n    if (!relPath.match(includePattern)) {\n      // Skip without logging.\n      continue;\n    } else if (relPath.startsWith(\"_deps\" + path.sep)) {\n      throw new Error(\n        `The path \"${fpath}\" is within the \"_deps\" directory, which is reserved for dependencies. Please move your code to another directory.`\n      );\n    } else if (relPath.startsWith(\"_generated\" + path.sep)) {\n      log(chalk.yellow(`Skipping ${fpath}`));\n    } else if (base.startsWith(\".\")) {\n      log(chalk.yellow(`Skipping dotfile ${fpath}`));\n    } else if (base === \"README.md\") {\n      log(chalk.yellow(`Skipping ${fpath}`));\n    } else if (base === \"_generated.ts\") {\n      log(chalk.yellow(`Skipping ${fpath}`));\n    } else if (base === \"schema.ts\") {\n      log(chalk.yellow(`Skipping ${fpath}`));\n    } else if (base.includes(\".test.\")) {\n      log(chalk.yellow(`Skipping ${fpath}`));\n    } else if (base === \"tsconfig.json\") {\n      log(chalk.yellow(`Skipping ${fpath}`));\n    } else if (relPath.includes(\" \")) {\n      log(chalk.yellow(`Skipping ${relPath} because it contains a space`));\n    } else {\n      log(chalk.green(`Preparing ${fpath}`));\n      entryPoints.push(fpath);\n    }\n  }\n  return entryPoints;\n}\n\nexport async function allEntryPoints(\n  fs: Filesystem,\n  dir: string,\n  verbose: boolean\n) {\n  return entryPoints(fs, dir, new RegExp(\".*\"), verbose);\n}\n\nexport async function databaseEntryPoints(\n  fs: Filesystem,\n  dir: string,\n  verbose: boolean\n): Promise<string[]> {\n  const excludePrefix = actionsDir + path.sep;\n  return entryPoints(\n    fs,\n    dir,\n    // Exclude functions/ subdirectory.\n    RegExp(`^(?!${escapeRegex(excludePrefix)})`),\n    verbose\n  );\n}\n\nexport async function actionsEntryPoints(\n  fs: Filesystem,\n  dir: string,\n  verbose: boolean\n): Promise<string[]> {\n  // Only look in functions subdirectory.\n  const prefix = actionsDir + path.sep;\n  return entryPoints(fs, dir, RegExp(`^${escapeRegex(prefix)}`), verbose);\n}\n"],
  "mappings": "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",
  "names": ["entryPoints"]
}
