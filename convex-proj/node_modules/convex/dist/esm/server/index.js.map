{
  "version": 3,
  "sources": ["../../../src/server/index.ts"],
  "sourcesContent": ["/**\n * Utilities for implementing server-side Convex query and mutation functions.\n *\n * ## Usage\n *\n * ### Code Generation\n *\n * This module is typically used alongside generated server code.\n *\n * To generate the server code, run `npx convex codegen` in your Convex project.\n * This will create a `convex/_generated/server.js` file with the following\n * functions, typed for your schema:\n * - [query](https://docs.convex.dev/generated-api/server#query)\n * - [mutation](https://docs.convex.dev/generated-api/server#mutation)\n *\n * If you aren't using TypeScript and code generation, you can use these untyped\n * functions instead:\n * - {@link queryGeneric}\n * - {@link mutationGeneric}\n *\n * ### Example\n *\n * Convex functions are defined by using either the `query` or\n * `mutation` wrappers.\n *\n * Queries receive a `db` that implements the {@link DatabaseReader} interface.\n *\n * ```js\n * import { query } from \"./_generated/server\";\n *\n * export default query(async ({ db }, ...args) => {\n *   // Your (read-only) code here!\n * });\n * ```\n *\n * If your function needs to write to the database, such as inserting, updating,\n * or deleting documents, use `mutation` instead which provides a `db` that\n * implements the {@link DatabaseWriter} interface.\n *\n * ```js\n * import { mutation } from \"./_generated/server\";\n *\n * export default mutation(async ({ db }, ...args) => {\n *   // Your mutation code here!\n * });\n * ```\n * @module\n */\nexport type { Auth, UserIdentity } from \"./authentication.js\";\nexport * from \"./database.js\";\nexport * from \"./data_model.js\";\nexport type {\n  Expression,\n  ExpressionOrValue,\n  FilterBuilder,\n} from \"./filter_builder.js\";\nexport {\n  actionGeneric,\n  httpEndpointGeneric,\n  mutationGeneric,\n  queryGeneric,\n} from \"./impl/registration_impl.js\";\nexport type { IndexRange, IndexRangeBuilder } from \"./index_range_builder.js\";\nexport * from \"./pagination.js\";\nexport type { OrderedQuery, Query, QueryInitializer } from \"./query.js\";\nexport type {\n  ActionBuilderForAPI,\n  ActionCtx,\n  HttpEndpointBuilderForAPI,\n  HttpEndpointCtx,\n  MutationBuilder,\n  PublicHttpEndpoint,\n  MutationCtx,\n  PublicAction,\n  PublicMutation,\n  PublicQuery,\n  QueryBuilderForDataModel,\n  QueryCtx,\n} from \"./registration.js\";\nexport * from \"./search_filter_builder.js\";\nexport * from \"./storage.js\";\nexport * from \"./scheduler.js\";\nexport type { WithoutSystemFields } from \"./system_fields\";\nexport { httpRouter, HttpRouter } from \"./router.js\";\n"],
  "mappings": ";AAiDA,cAAc;AACd,cAAc;AAMd;AAAA;AAAA;AAAA;AAAA;AAAA,OAKO;AAEP,cAAc;AAgBd,cAAc;AACd,cAAc;AACd,cAAc;AAEd,uCAAuC;",
  "names": []
}
