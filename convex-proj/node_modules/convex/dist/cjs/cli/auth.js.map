{
  "version": 3,
  "sources": ["../../../src/cli/auth.ts"],
  "sourcesContent": ["import { Command, Option } from \"commander\";\nimport {\n  AuthInfo,\n  readProjectConfig,\n  writeProjectConfig,\n} from \"./lib/config.js\";\nimport inquirer from \"inquirer\";\nimport chalk from \"chalk\";\nimport { oneoffContext } from \"./lib/context.js\";\nimport { validateIdentityProviderURL } from \"./lib/auth.js\";\n\nconst list = new Command(\"list\")\n  .description(\"List the currently-configured identity providers\")\n  .action(async () => {\n    const { projectConfig } = await readProjectConfig(oneoffContext);\n    const auth = projectConfig.authInfo;\n    for (let i = 0; i < auth.length; i++) {\n      console.log(\n        `${i + 1}. Issuer: \"${auth[i].domain}\", Application ID: \"${\n          auth[i].applicationID\n        }\"`\n      );\n    }\n  });\n\nconst rm = new Command(\"remove\")\n  .description(\"Remove one or more identity providers from the config\")\n  .action(async (_, command) => {\n    const ctx = oneoffContext;\n    const options = command.parent.opts();\n    const { projectConfig } = await readProjectConfig(ctx);\n    const auth = projectConfig.authInfo;\n    if (auth.length === 0) {\n      console.log(\n        chalk.yellow(\"No identity providers configured -- nothing to remove.\")\n      );\n      return;\n    }\n    const answers = await inquirer.prompt([\n      {\n        type: \"checkbox\",\n        message: \"Choose which provider(s) to delete:\",\n        choices: auth.map(info => {\n          return {\n            name: `Issuer: \"${info.domain}\", Application ID: \"${info.applicationID}\"`,\n            value: info,\n          };\n        }),\n        name: \"providers\",\n      },\n    ]);\n    const toRemove: AuthInfo[] = answers.providers ?? [];\n    if (toRemove.length === 0) {\n      console.log(chalk.green(\"No providers selected for removal.\"));\n      return;\n    }\n    const newAuth = auth.filter(oldInfo => toRemove.indexOf(oldInfo) < 0);\n    if (options.verbose) {\n      console.log(\n        chalk.bold(\n          `Removing ${toRemove.length} identity provider(s). After this operation, the following provider(s) will remain:`\n        )\n      );\n      for (let i = 0; i < newAuth.length; i++) {\n        console.log(\n          `${i + 1}. Issuer: \"${newAuth[i].domain}\", Application ID: \"${\n            newAuth[i].applicationID\n          }\"`\n        );\n      }\n      await inquirer.prompt([\"Press enter to continue or ctrl-C to abort.\\n\"]);\n    }\n    const newConfig = projectConfig;\n    newConfig.authInfo = newAuth;\n    await writeProjectConfig(ctx, newConfig);\n    console.log(\n      chalk.green(\n        \"Configuration updated. Run `npx convex dev` or `npx convex deploy` to sync these changes.\"\n      )\n    );\n  });\n\nconst add = new Command(\"add\")\n  .description(\"Add an identity provider to the config\")\n  .addOption(new Option(\"--identity-provider-url <url>\").hideHelp())\n  .addOption(new Option(\"--application-id <applicationId>\").hideHelp())\n  .action(async (options, command) => {\n    const ctx = oneoffContext;\n    const verbose = command.parent.opts().verbose;\n    const { projectConfig } = await readProjectConfig(ctx);\n    const newProviders: AuthInfo[] = [];\n    async function ask() {\n      await inquirer\n        .prompt([\n          {\n            type: \"input\",\n            name: \"domain\",\n            message:\n              \"Enter the identity provider's Domain URL, (e.g. `{your auth0 domain}.us.auth0.com`):\",\n            filter: validateIdentityProviderURL,\n          },\n          {\n            type: \"input\",\n            name: \"applicationID\",\n            message:\n              \"Enter your application/client ID with this identity provider:\",\n            validate: id => {\n              if (id.startsWith('\"')) {\n                return \"Client ID should not be quoted\";\n              }\n              return true;\n            },\n          },\n          {\n            type: \"confirm\",\n            name: \"anotherOne\",\n            message: \"Would you like to add another provider?\",\n            default: false,\n          },\n        ])\n        .then(async answers => {\n          newProviders.push({\n            domain: answers.domain,\n            applicationID: answers.applicationID,\n          });\n          if (answers.anotherOne) {\n            await ask();\n          }\n        });\n    }\n\n    if (options.identityProviderUrl && options.applicationId) {\n      newProviders.push({\n        domain: options.identityProviderUrl,\n        applicationID: options.applicationId,\n      });\n    } else {\n      await ask();\n    }\n\n    if (newProviders.length === 0) {\n      console.log(chalk.yellow(\"No providers added; nothing to do.\"));\n      return;\n    }\n    if (verbose) {\n      console.log(chalk.bold(\"Will add the following identity providers:\"));\n      for (let i = 0; i < newProviders.length; i++) {\n        console.log(\n          `${i + 1}. Issuer: \"${newProviders[i].domain}\", Application ID: \"${\n            newProviders[i].applicationID\n          }\"`\n        );\n      }\n      await inquirer.prompt([\"Press enter to continue or ctrl-C to abort.\\n\"]);\n    }\n    const config = projectConfig;\n    config.authInfo.push(...newProviders);\n    await writeProjectConfig(ctx, config);\n    console.log(\n      chalk.green(\n        \"Configuration updated. Run `npx convex dev` or `npx convex deploy` to sync these changes.\"\n      )\n    );\n  });\n\nexport const auth = new Command(\"auth\")\n  .description(\"Modify the authentication settings for your Convex project\")\n  .option(\"-v, --verbose\", \"Show changes and prompt for confirmation\")\n  .addCommand(list)\n  .addCommand(rm)\n  .addCommand(add);\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAAgC;AAChC,oBAIO;AACP,sBAAqB;AACrB,mBAAkB;AAClB,qBAA8B;AAC9B,kBAA4C;AAE5C,MAAM,OAAO,IAAI,yBAAQ,MAAM,EAC5B,YAAY,kDAAkD,EAC9D,OAAO,YAAY;AAClB,QAAM,EAAE,cAAc,IAAI,UAAM,iCAAkB,4BAAa;AAC/D,QAAMA,QAAO,cAAc;AAC3B,WAAS,IAAI,GAAG,IAAIA,MAAK,QAAQ,KAAK;AACpC,YAAQ;AAAA,MACN,GAAG,IAAI,eAAeA,MAAK,GAAG,6BAC5BA,MAAK,GAAG;AAAA,IAEZ;AAAA,EACF;AACF,CAAC;AAEH,MAAM,KAAK,IAAI,yBAAQ,QAAQ,EAC5B,YAAY,uDAAuD,EACnE,OAAO,OAAO,GAAG,YAAY;AAC5B,QAAM,MAAM;AACZ,QAAM,UAAU,QAAQ,OAAO,KAAK;AACpC,QAAM,EAAE,cAAc,IAAI,UAAM,iCAAkB,GAAG;AACrD,QAAMA,QAAO,cAAc;AAC3B,MAAIA,MAAK,WAAW,GAAG;AACrB,YAAQ;AAAA,MACN,aAAAC,QAAM,OAAO,wDAAwD;AAAA,IACvE;AACA;AAAA,EACF;AACA,QAAM,UAAU,MAAM,gBAAAC,QAAS,OAAO;AAAA,IACpC;AAAA,MACE,MAAM;AAAA,MACN,SAAS;AAAA,MACT,SAASF,MAAK,IAAI,UAAQ;AACxB,eAAO;AAAA,UACL,MAAM,YAAY,KAAK,6BAA6B,KAAK;AAAA,UACzD,OAAO;AAAA,QACT;AAAA,MACF,CAAC;AAAA,MACD,MAAM;AAAA,IACR;AAAA,EACF,CAAC;AACD,QAAM,WAAuB,QAAQ,aAAa,CAAC;AACnD,MAAI,SAAS,WAAW,GAAG;AACzB,YAAQ,IAAI,aAAAC,QAAM,MAAM,oCAAoC,CAAC;AAC7D;AAAA,EACF;AACA,QAAM,UAAUD,MAAK,OAAO,aAAW,SAAS,QAAQ,OAAO,IAAI,CAAC;AACpE,MAAI,QAAQ,SAAS;AACnB,YAAQ;AAAA,MACN,aAAAC,QAAM;AAAA,QACJ,YAAY,SAAS;AAAA,MACvB;AAAA,IACF;AACA,aAAS,IAAI,GAAG,IAAI,QAAQ,QAAQ,KAAK;AACvC,cAAQ;AAAA,QACN,GAAG,IAAI,eAAe,QAAQ,GAAG,6BAC/B,QAAQ,GAAG;AAAA,MAEf;AAAA,IACF;AACA,UAAM,gBAAAC,QAAS,OAAO,CAAC,+CAA+C,CAAC;AAAA,EACzE;AACA,QAAM,YAAY;AAClB,YAAU,WAAW;AACrB,YAAM,kCAAmB,KAAK,SAAS;AACvC,UAAQ;AAAA,IACN,aAAAD,QAAM;AAAA,MACJ;AAAA,IACF;AAAA,EACF;AACF,CAAC;AAEH,MAAM,MAAM,IAAI,yBAAQ,KAAK,EAC1B,YAAY,wCAAwC,EACpD,UAAU,IAAI,wBAAO,+BAA+B,EAAE,SAAS,CAAC,EAChE,UAAU,IAAI,wBAAO,kCAAkC,EAAE,SAAS,CAAC,EACnE,OAAO,OAAO,SAAS,YAAY;AAClC,QAAM,MAAM;AACZ,QAAM,UAAU,QAAQ,OAAO,KAAK,EAAE;AACtC,QAAM,EAAE,cAAc,IAAI,UAAM,iCAAkB,GAAG;AACrD,QAAM,eAA2B,CAAC;AAClC,iBAAe,MAAM;AACnB,UAAM,gBAAAC,QACH,OAAO;AAAA,MACN;AAAA,QACE,MAAM;AAAA,QACN,MAAM;AAAA,QACN,SACE;AAAA,QACF,QAAQ;AAAA,MACV;AAAA,MACA;AAAA,QACE,MAAM;AAAA,QACN,MAAM;AAAA,QACN,SACE;AAAA,QACF,UAAU,QAAM;AACd,cAAI,GAAG,WAAW,GAAG,GAAG;AACtB,mBAAO;AAAA,UACT;AACA,iBAAO;AAAA,QACT;AAAA,MACF;AAAA,MACA;AAAA,QACE,MAAM;AAAA,QACN,MAAM;AAAA,QACN,SAAS;AAAA,QACT,SAAS;AAAA,MACX;AAAA,IACF,CAAC,EACA,KAAK,OAAM,YAAW;AACrB,mBAAa,KAAK;AAAA,QAChB,QAAQ,QAAQ;AAAA,QAChB,eAAe,QAAQ;AAAA,MACzB,CAAC;AACD,UAAI,QAAQ,YAAY;AACtB,cAAM,IAAI;AAAA,MACZ;AAAA,IACF,CAAC;AAAA,EACL;AAEA,MAAI,QAAQ,uBAAuB,QAAQ,eAAe;AACxD,iBAAa,KAAK;AAAA,MAChB,QAAQ,QAAQ;AAAA,MAChB,eAAe,QAAQ;AAAA,IACzB,CAAC;AAAA,EACH,OAAO;AACL,UAAM,IAAI;AAAA,EACZ;AAEA,MAAI,aAAa,WAAW,GAAG;AAC7B,YAAQ,IAAI,aAAAD,QAAM,OAAO,oCAAoC,CAAC;AAC9D;AAAA,EACF;AACA,MAAI,SAAS;AACX,YAAQ,IAAI,aAAAA,QAAM,KAAK,4CAA4C,CAAC;AACpE,aAAS,IAAI,GAAG,IAAI,aAAa,QAAQ,KAAK;AAC5C,cAAQ;AAAA,QACN,GAAG,IAAI,eAAe,aAAa,GAAG,6BACpC,aAAa,GAAG;AAAA,MAEpB;AAAA,IACF;AACA,UAAM,gBAAAC,QAAS,OAAO,CAAC,+CAA+C,CAAC;AAAA,EACzE;AACA,QAAM,SAAS;AACf,SAAO,SAAS,KAAK,GAAG,YAAY;AACpC,YAAM,kCAAmB,KAAK,MAAM;AACpC,UAAQ;AAAA,IACN,aAAAD,QAAM;AAAA,MACJ;AAAA,IACF;AAAA,EACF;AACF,CAAC;AAEI,MAAM,OAAO,IAAI,yBAAQ,MAAM,EACnC,YAAY,4DAA4D,EACxE,OAAO,iBAAiB,0CAA0C,EAClE,WAAW,IAAI,EACf,WAAW,EAAE,EACb,WAAW,GAAG;",
  "names": ["auth", "chalk", "inquirer"]
}
