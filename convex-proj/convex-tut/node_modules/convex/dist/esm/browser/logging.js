"use strict";
const INFO_COLOR = "color:rgb(0, 145, 255)";
function prefix_for_source(source) {
  switch (source) {
    case "query":
      return "Q";
    case "mutation":
      return "M";
    case "action":
      return "A";
  }
}
export function logToConsole(type, source, udfPath, message) {
  const prefix = prefix_for_source(source);
  if (type === "info") {
    console.log(`%c[CONVEX ${prefix}(${udfPath})] ${message}`, INFO_COLOR);
  } else {
    console.error(`[CONVEX ${prefix}(${udfPath})] ${message}`);
  }
}
export function logFatalError(message) {
  const errorMessage = `[CONVEX FATAL ERROR] ${message}`;
  console.error(errorMessage);
  return new Error(errorMessage);
}
export function createError(source, udfPath, message) {
  const prefix = prefix_for_source(source);
  return new Error(`[CONVEX ${prefix}(${udfPath})] ${message}`);
}
//# sourceMappingURL=logging.js.map
