{
  "version": 3,
  "sources": ["../../../../src/cli/lib/utils.ts"],
  "sourcesContent": ["import axios, { AxiosInstance, AxiosResponse, Method } from \"axios\";\nimport chalk from \"chalk\";\nimport inquirer from \"inquirer\";\nimport * as readline from \"readline\";\nimport path from \"path\";\nimport os from \"os\";\nimport { z } from \"zod\";\n\nimport type { ProjectConfig } from \"./config.js\";\nimport { configFilepath } from \"./config.js\";\nimport { Context } from \"./context.js\";\nimport { init } from \"./init.js\";\nimport { version } from \"../../index.js\";\nimport { Project } from \"./api.js\";\n\nexport const productionProvisionHost = \"https://provision.convex.dev\";\nexport const provisionHost =\n  process.env.CONVEX_PROVISION_HOST || productionProvisionHost;\nconst BIG_BRAIN_URL = `${provisionHost}/api/${version}`;\n\n/** Prompt for keyboard input with the given `query` string and return a promise\n * that resolves to the input. */\nexport function prompt(query: string) {\n  const rl = readline.createInterface({\n    input: process.stdin,\n    output: process.stdout,\n  });\n  return new Promise(resolve =>\n    rl.question(query, answer => {\n      rl.close();\n      resolve(answer);\n    })\n  );\n}\n\nexport async function fatalServerErr(ctx: Context, err: any): Promise<never> {\n  if (ctx.spinner) {\n    // Fail the spinner so the console logs appear\n    ctx.spinner.fail();\n  }\n\n  const res = err.response;\n  if (res) {\n    await deprecationCheckError(ctx, res);\n    console.error(\n      chalk.gray(\n        `${res.status} ${res.statusText}: ${res.data.code}: ${res.data.message}`\n      )\n    );\n    if (res.status === 401) {\n      console.error(\n        chalk.red(\"Log in to get an access token with `npx convex login`.\")\n      );\n    }\n  } else {\n    console.error(chalk.gray(err));\n  }\n  return await ctx.fatalError(1, \"network\", err);\n}\n\nasync function deprecationCheckError(\n  ctx: Context,\n  resp: AxiosResponse<any, any>\n) {\n  if (ctx.deprecationMessagePrinted) {\n    return;\n  }\n  const headers = resp.headers;\n  if (headers) {\n    const deprecationState = headers[\"x-convex-deprecation-state\"];\n    const deprecationMessage = headers[\"x-convex-deprecation-message\"];\n    switch (deprecationState) {\n      case undefined:\n        break;\n      case \"Upgradable\":\n        console.log(chalk.yellow(deprecationMessage));\n        break;\n      case \"Deprecated\":\n      case \"UpgradeCritical\":\n        console.log(chalk.red(deprecationMessage));\n        return await ctx.fatalError(1, \"network\");\n      default:\n        console.log(deprecationMessage);\n        break;\n    }\n  }\n  ctx.deprecationMessagePrinted = true;\n}\n\n/// Call this method after a successful API response to conditionally print the\n/// \"please upgrade\" message.\nexport function deprecationCheckWarning(\n  ctx: Context,\n  resp: AxiosResponse<any, any>\n) {\n  if (ctx.deprecationMessagePrinted) {\n    return;\n  }\n  const headers = resp.headers;\n  if (headers) {\n    const deprecationState = headers[\"x-convex-deprecation-state\"];\n    const deprecationMessage = headers[\"x-convex-deprecation-message\"];\n    switch (deprecationState) {\n      case undefined:\n        break;\n      case \"Deprecated\":\n      case \"UpgradeCritical\":\n        // These should never happen because such states are errors, not warnings.\n        throw new Error(\n          \"Called deprecationCheckWarning on a fatal error. This is a bug.\"\n        );\n      case \"Upgradable\":\n        console.log(chalk.yellow(deprecationMessage));\n        break;\n      default:\n        console.log(deprecationMessage);\n        break;\n    }\n  }\n  ctx.deprecationMessagePrinted = true;\n}\n\ntype Team = {\n  id: number;\n  name: string;\n  slug: string;\n};\n\nexport async function validateOrSelectTeam(\n  ctx: Context,\n  teamSlug: string | null,\n  promptMessage: string\n): Promise<string> {\n  const teams = await bigBrainAPI(ctx, \"GET\", \"teams\");\n  if (teams.length === 0) {\n    console.error(chalk.red(\"Error: No teams found\"));\n    throw new Error(\"No teams found\");\n  }\n  if (!teamSlug) {\n    // Prompt the user to select if they belong to more than one team.\n    switch (teams.length) {\n      case 1:\n        return teams[0].slug;\n      default:\n        return (\n          await inquirer.prompt([\n            {\n              name: \"teamSlug\",\n              message: promptMessage,\n              type: \"list\",\n              choices: teams.map((team: Team) => ({\n                name: `${team.name} (${team.slug})`,\n                value: team.slug,\n              })),\n            },\n          ])\n        ).teamSlug;\n    }\n  } else {\n    // Validate the chosen team.\n    if (!teams.find((team: Team) => team.slug === teamSlug)) {\n      console.error(chalk.red(`Error: Team ${teamSlug} not found`));\n      throw new Error(\"Team not found\");\n    }\n    return teamSlug;\n  }\n}\n\nexport async function validateOrSelectProject(\n  ctx: Context,\n  projectSlug: string | null,\n  teamSlug: string,\n  singleProjectPrompt: string,\n  multiProjectPrompt: string\n): Promise<string | null> {\n  const projects = await bigBrainAPI(ctx, \"GET\", `/teams/${teamSlug}/projects`);\n  if (projects.length === 0) {\n    console.error(chalk.red(\"Error: No projects found\"));\n    throw new Error(\"No projects found\");\n  }\n  if (!projectSlug) {\n    // Prompt the user to select project.\n    switch (projects.length) {\n      case 1: {\n        console.log(\"Found 1 project.\");\n        const project = projects[0];\n        const confirmed = (\n          await inquirer.prompt([\n            {\n              type: \"confirm\",\n              name: \"confirmed\",\n              message: `${singleProjectPrompt} ${project.name} (${project.slug})?`,\n            },\n          ])\n        ).confirmed;\n\n        if (!confirmed) {\n          return null;\n        }\n        return projects[0].slug;\n      }\n      default:\n        console.log(`Found ${projects.length} projects.`);\n        return (\n          await inquirer.prompt([\n            {\n              name: \"project\",\n              message: multiProjectPrompt,\n              type: \"list\",\n              choices: projects.map((project: Project) => ({\n                name: `${project.name} (${project.slug})`,\n                value: project.slug,\n              })),\n            },\n          ])\n        ).project;\n    }\n  } else {\n    // Validate the chosen project.\n    if (!projects.find((project: Project) => project.slug === projectSlug)) {\n      console.error(chalk.red(`Error: Project ${projectSlug} not found`));\n      throw new Error(\"Project not found\");\n    }\n    return projectSlug;\n  }\n}\n\nclass PackageJsonLoadError extends Error {}\n\nexport interface Package {\n  name: string;\n  version: string;\n}\n\nexport async function loadPackageJson(ctx: Context): Promise<Package[]> {\n  let packageJson;\n  try {\n    packageJson = ctx.fs.readUtf8File(\"package.json\");\n  } catch (err) {\n    console.error(\n      chalk.red(\n        `Unable to read your package.json: ${err}. Make sure you're running this command from the root directory of a Convex app that contains the package.json`\n      )\n    );\n    return await ctx.fatalError(1, \"fs\");\n  }\n  let obj;\n  try {\n    obj = JSON.parse(packageJson);\n  } catch (err) {\n    console.error(chalk.red(`Unable to parse package.json: ${err}`));\n    return await ctx.fatalError(1, \"fs\", err);\n  }\n  if (typeof obj !== \"object\") {\n    throw new PackageJsonLoadError(\n      \"Expected to parse an object from package.json\"\n    );\n  }\n  const packages = [];\n  if (obj.dependencies) {\n    for (const dep in obj.dependencies) {\n      packages.push({ name: dep, version: obj.dependencies[dep] });\n    }\n  }\n  if (obj.devDependencies) {\n    for (const dep in obj.devDependencies) {\n      packages.push({ name: dep, version: obj.devDependencies[dep] });\n    }\n  }\n  return packages;\n}\n\nexport async function ensureHasConvexDependency(ctx: Context, cmd: string) {\n  const packages = await loadPackageJson(ctx);\n  const hasConvexDependency = !!packages.filter(({ name }) => name === \"convex\")\n    .length;\n  if (!hasConvexDependency) {\n    console.error(\n      chalk.red(\n        `In order to ${cmd}, add \\`convex\\` to your package.json dependencies.`\n      )\n    );\n    return await ctx.fatalError(1, \"fs\");\n  }\n}\n\n/** Return a new array with elements of the passed in array sorted by a key lambda */\nexport const sorted = <T>(arr: T[], key: (el: T) => any): T[] => {\n  const newArr = [...arr];\n  const cmp = (a: T, b: T) => {\n    if (key(a) < key(b)) return -1;\n    if (key(a) > key(b)) return 1;\n    return 0;\n  };\n  return newArr.sort(cmp);\n};\n\nexport function functionsDir(\n  configPath: string,\n  projectConfig: ProjectConfig\n): string {\n  return path.join(path.dirname(configPath), projectConfig.functions);\n}\n\nexport function rootDirectory(): string {\n  let dirName;\n  // Use a different directory for config files generated for tests\n  if (process.env.CONVEX_PROVISION_HOST) {\n    dirName = \".convex-test\";\n  } else {\n    dirName = \".convex\";\n  }\n  return path.join(os.homedir(), dirName);\n}\nexport function globalConfigPath(): string {\n  return path.join(rootDirectory(), \"config.json\");\n}\n\nasync function readGlobalConfig(ctx: Context): Promise<GlobalConfig | null> {\n  const configPath = globalConfigPath();\n  let configFile;\n  try {\n    configFile = ctx.fs.readUtf8File(configPath);\n  } catch (err) {\n    return null;\n  }\n  try {\n    const schema = z.object({\n      accessToken: z.string().min(1),\n    });\n    const config: GlobalConfig = schema.parse(JSON.parse(configFile));\n    return config;\n  } catch (err) {\n    // Print an error an act as if the file does not exist.\n    console.error(\n      chalk.red(\n        `Failed to parse global config in ${configPath} with error ${err}.`\n      )\n    );\n    return null;\n  }\n}\n\nexport async function getAuthHeader(ctx: Context): Promise<string | null> {\n  if (process.env.CONVEX_OVERRIDE_ACCESS_TOKEN) {\n    return `Bearer ${process.env.CONVEX_OVERRIDE_ACCESS_TOKEN}`;\n  }\n  const globalConfig = await readGlobalConfig(ctx);\n  if (globalConfig) {\n    return `Bearer ${globalConfig.accessToken}`;\n  }\n  return null;\n}\n\nexport async function bigBrainClient(ctx: Context): Promise<AxiosInstance> {\n  const authHeader = await getAuthHeader(ctx);\n  const headers: Record<string, string> = authHeader\n    ? { Authorization: authHeader }\n    : {};\n  return axios.create({\n    headers,\n    baseURL: BIG_BRAIN_URL,\n  });\n}\n\nexport async function bigBrainAPI(\n  ctx: Context,\n  method: Method,\n  url: string,\n  data?: any\n): Promise<any> {\n  let res;\n  try {\n    const client = await bigBrainClient(ctx);\n    res = await client.request({ url, method, data });\n    deprecationCheckWarning(ctx, res);\n    return res.data;\n  } catch (err) {\n    return await fatalServerErr(ctx, err);\n  }\n}\n\nexport type GlobalConfig = {\n  accessToken: string;\n};\n\n/**\n * Polls an arbitrary function until a condition is met.\n *\n * @param fetch Function performing a fetch, returning resulting data.\n * @param condition This function will terminate polling when it returns `true`.\n * @param waitMs How long to wait in between fetches.\n * @returns The resulting data from `fetch`.\n */\nexport const poll = async function <Result>(\n  fetch: () => Promise<Result>,\n  condition: (data: Result) => boolean,\n  waitMs = 1000\n) {\n  let result = await fetch();\n  while (!condition(result)) {\n    await wait(waitMs);\n    result = await fetch();\n  }\n  return result;\n};\n\nconst wait = function (waitMs: number) {\n  return new Promise(resolve => {\n    setTimeout(resolve, waitMs);\n  });\n};\n\n// We can eventually switch to something like `filesize` for i18n and\n// more robust formatting, but let's keep our CLI bundle small for now.\nexport function formatSize(n: number): string {\n  if (n < 1024) {\n    return `${n} B`;\n  }\n  if (n < 1024 * 1024) {\n    return `${Math.floor(n / 1024)} KB`;\n  }\n  if (n < 1024 * 1024 * 1024) {\n    return `${Math.floor(n / 1024 / 1024)} MB`;\n  }\n  return `${n} B`;\n}\n\nexport function formatDuration(ms: number): string {\n  const twoDigits = (n: number, unit: string) =>\n    `${n.toLocaleString(\"en-US\", { maximumFractionDigits: 2 })}${unit}`;\n\n  if (ms < 1e-3) {\n    return twoDigits(ms * 1e9, \"ns\");\n  }\n  if (ms < 1) {\n    return twoDigits(ms * 1e3, \"\u00B5s\");\n  }\n  if (ms < 1e3) {\n    return twoDigits(ms, \"ms\");\n  }\n  const s = ms / 1e3;\n  if (s < 60) {\n    return twoDigits(ms / 1e3, \"s\");\n  }\n  return twoDigits(s / 60, \"m\");\n}\n\n// We don't allow running commands in project subdirectories yet,\n// but we can provide better errors if we look around.\nfunction findParentConfigs(ctx: Context): {\n  parentPackageJson?: string;\n  parentConvexJson?: string;\n} {\n  const parentPackageJson = findUp(ctx, \"package.json\");\n  const candidateConvexJson =\n    parentPackageJson &&\n    path.join(path.dirname(parentPackageJson), \"convex.json\");\n  const parentConvexJson =\n    candidateConvexJson && ctx.fs.exists(candidateConvexJson)\n      ? candidateConvexJson\n      : undefined;\n  return {\n    parentPackageJson,\n    parentConvexJson,\n  };\n}\n\n/**\n * Finds a file in the current working directory or a parent.\n *\n * @returns The absolute path of the first file found or undefined.\n */\nfunction findUp(ctx: Context, filename: string): string | undefined {\n  let curDir = path.resolve(\".\");\n  let parentDir = curDir;\n  do {\n    const candidate = path.join(curDir, filename);\n    if (ctx.fs.exists(candidate)) {\n      return candidate;\n    }\n    curDir = parentDir;\n    parentDir = path.dirname(curDir);\n  } while (parentDir !== curDir);\n  return;\n}\n\n/**\n * Ensures the current working directory contains package.json and convex.json\n * files by printing error messages or interactively offering to run `init()`.\n *\n * @param ctx\n * @param ensureConvexJson Offer to run init() if no convex.json file is present.\n */\nexport async function ensureProjectDirectory(\n  ctx: Context,\n  ensureConvexJson = false\n) {\n  const { parentPackageJson, parentConvexJson } = findParentConfigs(ctx);\n  if (!parentPackageJson) {\n    console.error(\n      \"No package.json found. If you meant to create a new project, try\"\n    );\n    console.error(`npx create-next-app@latest -e convex my-convex-app`);\n    await ctx.fatalError(1);\n  }\n  if (parentPackageJson !== path.resolve(\"package.json\")) {\n    console.error(\"Run this command from the root directory of a project.\");\n    return await ctx.fatalError(1, \"fs\");\n  }\n  if (ensureConvexJson && parentPackageJson && !parentConvexJson) {\n    const expected = await configFilepath(ctx);\n    console.error(`No convex.json file found at ${expected}`);\n\n    const { confirmed } = await inquirer.prompt([\n      {\n        type: \"confirm\",\n        name: \"confirmed\",\n        message: `Would you like to create a new Convex project here? (\\`npx convex init\\`)`,\n      },\n    ]);\n\n    if (!confirmed) {\n      console.error(\"Run `npx convex dev` in a directory with a convex.json.\");\n      return await ctx.fatalError(1, \"fs\");\n    }\n\n    await init(ctx, null, null);\n  }\n}\n"],
  "mappings": ";AAAA,OAAO,WAAqD;AAC5D,OAAO,WAAW;AAClB,OAAO,cAAc;AACrB,YAAY,cAAc;AAC1B,OAAO,UAAU;AACjB,OAAO,QAAQ;AACf,SAAS,SAAS;AAGlB,SAAS,sBAAsB;AAE/B,SAAS,YAAY;AACrB,SAAS,eAAe;AAGjB,aAAM,0BAA0B;AAChC,aAAM,gBACX,QAAQ,IAAI,yBAAyB;AACvC,MAAM,gBAAgB,GAAG,qBAAqB;AAIvC,gBAAS,OAAO,OAAe;AACpC,QAAM,KAAK,SAAS,gBAAgB;AAAA,IAClC,OAAO,QAAQ;AAAA,IACf,QAAQ,QAAQ;AAAA,EAClB,CAAC;AACD,SAAO,IAAI;AAAA,IAAQ,aACjB,GAAG,SAAS,OAAO,YAAU;AAC3B,SAAG,MAAM;AACT,cAAQ,MAAM;AAAA,IAChB,CAAC;AAAA,EACH;AACF;AAEA,sBAAsB,eAAe,KAAc,KAA0B;AAC3E,MAAI,IAAI,SAAS;AAEf,QAAI,QAAQ,KAAK;AAAA,EACnB;AAEA,QAAM,MAAM,IAAI;AAChB,MAAI,KAAK;AACP,UAAM,sBAAsB,KAAK,GAAG;AACpC,YAAQ;AAAA,MACN,MAAM;AAAA,QACJ,GAAG,IAAI,UAAU,IAAI,eAAe,IAAI,KAAK,SAAS,IAAI,KAAK;AAAA,MACjE;AAAA,IACF;AACA,QAAI,IAAI,WAAW,KAAK;AACtB,cAAQ;AAAA,QACN,MAAM,IAAI,wDAAwD;AAAA,MACpE;AAAA,IACF;AAAA,EACF,OAAO;AACL,YAAQ,MAAM,MAAM,KAAK,GAAG,CAAC;AAAA,EAC/B;AACA,SAAO,MAAM,IAAI,WAAW,GAAG,WAAW,GAAG;AAC/C;AAEA,eAAe,sBACb,KACA,MACA;AACA,MAAI,IAAI,2BAA2B;AACjC;AAAA,EACF;AACA,QAAM,UAAU,KAAK;AACrB,MAAI,SAAS;AACX,UAAM,mBAAmB,QAAQ;AACjC,UAAM,qBAAqB,QAAQ;AACnC,YAAQ,kBAAkB;AAAA,MACxB,KAAK;AACH;AAAA,MACF,KAAK;AACH,gBAAQ,IAAI,MAAM,OAAO,kBAAkB,CAAC;AAC5C;AAAA,MACF,KAAK;AAAA,MACL,KAAK;AACH,gBAAQ,IAAI,MAAM,IAAI,kBAAkB,CAAC;AACzC,eAAO,MAAM,IAAI,WAAW,GAAG,SAAS;AAAA,MAC1C;AACE,gBAAQ,IAAI,kBAAkB;AAC9B;AAAA,IACJ;AAAA,EACF;AACA,MAAI,4BAA4B;AAClC;AAIO,gBAAS,wBACd,KACA,MACA;AACA,MAAI,IAAI,2BAA2B;AACjC;AAAA,EACF;AACA,QAAM,UAAU,KAAK;AACrB,MAAI,SAAS;AACX,UAAM,mBAAmB,QAAQ;AACjC,UAAM,qBAAqB,QAAQ;AACnC,YAAQ,kBAAkB;AAAA,MACxB,KAAK;AACH;AAAA,MACF,KAAK;AAAA,MACL,KAAK;AAEH,cAAM,IAAI;AAAA,UACR;AAAA,QACF;AAAA,MACF,KAAK;AACH,gBAAQ,IAAI,MAAM,OAAO,kBAAkB,CAAC;AAC5C;AAAA,MACF;AACE,gBAAQ,IAAI,kBAAkB;AAC9B;AAAA,IACJ;AAAA,EACF;AACA,MAAI,4BAA4B;AAClC;AAQA,sBAAsB,qBACpB,KACA,UACA,eACiB;AACjB,QAAM,QAAQ,MAAM,YAAY,KAAK,OAAO,OAAO;AACnD,MAAI,MAAM,WAAW,GAAG;AACtB,YAAQ,MAAM,MAAM,IAAI,uBAAuB,CAAC;AAChD,UAAM,IAAI,MAAM,gBAAgB;AAAA,EAClC;AACA,MAAI,CAAC,UAAU;AAEb,YAAQ,MAAM,QAAQ;AAAA,MACpB,KAAK;AACH,eAAO,MAAM,GAAG;AAAA,MAClB;AACE,gBACE,MAAM,SAAS,OAAO;AAAA,UACpB;AAAA,YACE,MAAM;AAAA,YACN,SAAS;AAAA,YACT,MAAM;AAAA,YACN,SAAS,MAAM,IAAI,CAAC,UAAgB;AAAA,cAClC,MAAM,GAAG,KAAK,SAAS,KAAK;AAAA,cAC5B,OAAO,KAAK;AAAA,YACd,EAAE;AAAA,UACJ;AAAA,QACF,CAAC,GACD;AAAA,IACN;AAAA,EACF,OAAO;AAEL,QAAI,CAAC,MAAM,KAAK,CAAC,SAAe,KAAK,SAAS,QAAQ,GAAG;AACvD,cAAQ,MAAM,MAAM,IAAI,eAAe,oBAAoB,CAAC;AAC5D,YAAM,IAAI,MAAM,gBAAgB;AAAA,IAClC;AACA,WAAO;AAAA,EACT;AACF;AAEA,sBAAsB,wBACpB,KACA,aACA,UACA,qBACA,oBACwB;AACxB,QAAM,WAAW,MAAM,YAAY,KAAK,OAAO,UAAU,mBAAmB;AAC5E,MAAI,SAAS,WAAW,GAAG;AACzB,YAAQ,MAAM,MAAM,IAAI,0BAA0B,CAAC;AACnD,UAAM,IAAI,MAAM,mBAAmB;AAAA,EACrC;AACA,MAAI,CAAC,aAAa;AAEhB,YAAQ,SAAS,QAAQ;AAAA,MACvB,KAAK,GAAG;AACN,gBAAQ,IAAI,kBAAkB;AAC9B,cAAM,UAAU,SAAS;AACzB,cAAM,aACJ,MAAM,SAAS,OAAO;AAAA,UACpB;AAAA,YACE,MAAM;AAAA,YACN,MAAM;AAAA,YACN,SAAS,GAAG,uBAAuB,QAAQ,SAAS,QAAQ;AAAA,UAC9D;AAAA,QACF,CAAC,GACD;AAEF,YAAI,CAAC,WAAW;AACd,iBAAO;AAAA,QACT;AACA,eAAO,SAAS,GAAG;AAAA,MACrB;AAAA,MACA;AACE,gBAAQ,IAAI,SAAS,SAAS,kBAAkB;AAChD,gBACE,MAAM,SAAS,OAAO;AAAA,UACpB;AAAA,YACE,MAAM;AAAA,YACN,SAAS;AAAA,YACT,MAAM;AAAA,YACN,SAAS,SAAS,IAAI,CAAC,aAAsB;AAAA,cAC3C,MAAM,GAAG,QAAQ,SAAS,QAAQ;AAAA,cAClC,OAAO,QAAQ;AAAA,YACjB,EAAE;AAAA,UACJ;AAAA,QACF,CAAC,GACD;AAAA,IACN;AAAA,EACF,OAAO;AAEL,QAAI,CAAC,SAAS,KAAK,CAAC,YAAqB,QAAQ,SAAS,WAAW,GAAG;AACtE,cAAQ,MAAM,MAAM,IAAI,kBAAkB,uBAAuB,CAAC;AAClE,YAAM,IAAI,MAAM,mBAAmB;AAAA,IACrC;AACA,WAAO;AAAA,EACT;AACF;AAEA,MAAM,6BAA6B,MAAM;AAAC;AAO1C,sBAAsB,gBAAgB,KAAkC;AACtE,MAAI;AACJ,MAAI;AACF,kBAAc,IAAI,GAAG,aAAa,cAAc;AAAA,EAClD,SAAS,KAAP;AACA,YAAQ;AAAA,MACN,MAAM;AAAA,QACJ,qCAAqC;AAAA,MACvC;AAAA,IACF;AACA,WAAO,MAAM,IAAI,WAAW,GAAG,IAAI;AAAA,EACrC;AACA,MAAI;AACJ,MAAI;AACF,UAAM,KAAK,MAAM,WAAW;AAAA,EAC9B,SAAS,KAAP;AACA,YAAQ,MAAM,MAAM,IAAI,iCAAiC,KAAK,CAAC;AAC/D,WAAO,MAAM,IAAI,WAAW,GAAG,MAAM,GAAG;AAAA,EAC1C;AACA,MAAI,OAAO,QAAQ,UAAU;AAC3B,UAAM,IAAI;AAAA,MACR;AAAA,IACF;AAAA,EACF;AACA,QAAM,WAAW,CAAC;AAClB,MAAI,IAAI,cAAc;AACpB,eAAW,OAAO,IAAI,cAAc;AAClC,eAAS,KAAK,EAAE,MAAM,KAAK,SAAS,IAAI,aAAa,KAAK,CAAC;AAAA,IAC7D;AAAA,EACF;AACA,MAAI,IAAI,iBAAiB;AACvB,eAAW,OAAO,IAAI,iBAAiB;AACrC,eAAS,KAAK,EAAE,MAAM,KAAK,SAAS,IAAI,gBAAgB,KAAK,CAAC;AAAA,IAChE;AAAA,EACF;AACA,SAAO;AACT;AAEA,sBAAsB,0BAA0B,KAAc,KAAa;AACzE,QAAM,WAAW,MAAM,gBAAgB,GAAG;AAC1C,QAAM,sBAAsB,CAAC,CAAC,SAAS,OAAO,CAAC,EAAE,KAAK,MAAM,SAAS,QAAQ,EAC1E;AACH,MAAI,CAAC,qBAAqB;AACxB,YAAQ;AAAA,MACN,MAAM;AAAA,QACJ,eAAe;AAAA,MACjB;AAAA,IACF;AACA,WAAO,MAAM,IAAI,WAAW,GAAG,IAAI;AAAA,EACrC;AACF;AAGO,aAAM,SAAS,CAAI,KAAU,QAA6B;AAC/D,QAAM,SAAS,CAAC,GAAG,GAAG;AACtB,QAAM,MAAM,CAAC,GAAM,MAAS;AAC1B,QAAI,IAAI,CAAC,IAAI,IAAI,CAAC;AAAG,aAAO;AAC5B,QAAI,IAAI,CAAC,IAAI,IAAI,CAAC;AAAG,aAAO;AAC5B,WAAO;AAAA,EACT;AACA,SAAO,OAAO,KAAK,GAAG;AACxB;AAEO,gBAAS,aACd,YACA,eACQ;AACR,SAAO,KAAK,KAAK,KAAK,QAAQ,UAAU,GAAG,cAAc,SAAS;AACpE;AAEO,gBAAS,gBAAwB;AACtC,MAAI;AAEJ,MAAI,QAAQ,IAAI,uBAAuB;AACrC,cAAU;AAAA,EACZ,OAAO;AACL,cAAU;AAAA,EACZ;AACA,SAAO,KAAK,KAAK,GAAG,QAAQ,GAAG,OAAO;AACxC;AACO,gBAAS,mBAA2B;AACzC,SAAO,KAAK,KAAK,cAAc,GAAG,aAAa;AACjD;AAEA,eAAe,iBAAiB,KAA4C;AAC1E,QAAM,aAAa,iBAAiB;AACpC,MAAI;AACJ,MAAI;AACF,iBAAa,IAAI,GAAG,aAAa,UAAU;AAAA,EAC7C,SAAS,KAAP;AACA,WAAO;AAAA,EACT;AACA,MAAI;AACF,UAAM,SAAS,EAAE,OAAO;AAAA,MACtB,aAAa,EAAE,OAAO,EAAE,IAAI,CAAC;AAAA,IAC/B,CAAC;AACD,UAAM,SAAuB,OAAO,MAAM,KAAK,MAAM,UAAU,CAAC;AAChE,WAAO;AAAA,EACT,SAAS,KAAP;AAEA,YAAQ;AAAA,MACN,MAAM;AAAA,QACJ,oCAAoC,yBAAyB;AAAA,MAC/D;AAAA,IACF;AACA,WAAO;AAAA,EACT;AACF;AAEA,sBAAsB,cAAc,KAAsC;AACxE,MAAI,QAAQ,IAAI,8BAA8B;AAC5C,WAAO,UAAU,QAAQ,IAAI;AAAA,EAC/B;AACA,QAAM,eAAe,MAAM,iBAAiB,GAAG;AAC/C,MAAI,cAAc;AAChB,WAAO,UAAU,aAAa;AAAA,EAChC;AACA,SAAO;AACT;AAEA,sBAAsB,eAAe,KAAsC;AACzE,QAAM,aAAa,MAAM,cAAc,GAAG;AAC1C,QAAM,UAAkC,aACpC,EAAE,eAAe,WAAW,IAC5B,CAAC;AACL,SAAO,MAAM,OAAO;AAAA,IAClB;AAAA,IACA,SAAS;AAAA,EACX,CAAC;AACH;AAEA,sBAAsB,YACpB,KACA,QACA,KACA,MACc;AACd,MAAI;AACJ,MAAI;AACF,UAAM,SAAS,MAAM,eAAe,GAAG;AACvC,UAAM,MAAM,OAAO,QAAQ,EAAE,KAAK,QAAQ,KAAK,CAAC;AAChD,4BAAwB,KAAK,GAAG;AAChC,WAAO,IAAI;AAAA,EACb,SAAS,KAAP;AACA,WAAO,MAAM,eAAe,KAAK,GAAG;AAAA,EACtC;AACF;AAcO,aAAM,OAAO,eAClB,OACA,WACA,SAAS,KACT;AACA,MAAI,SAAS,MAAM,MAAM;AACzB,SAAO,CAAC,UAAU,MAAM,GAAG;AACzB,UAAM,KAAK,MAAM;AACjB,aAAS,MAAM,MAAM;AAAA,EACvB;AACA,SAAO;AACT;AAEA,MAAM,OAAO,SAAU,QAAgB;AACrC,SAAO,IAAI,QAAQ,aAAW;AAC5B,eAAW,SAAS,MAAM;AAAA,EAC5B,CAAC;AACH;AAIO,gBAAS,WAAW,GAAmB;AAC5C,MAAI,IAAI,MAAM;AACZ,WAAO,GAAG;AAAA,EACZ;AACA,MAAI,IAAI,OAAO,MAAM;AACnB,WAAO,GAAG,KAAK,MAAM,IAAI,IAAI;AAAA,EAC/B;AACA,MAAI,IAAI,OAAO,OAAO,MAAM;AAC1B,WAAO,GAAG,KAAK,MAAM,IAAI,OAAO,IAAI;AAAA,EACtC;AACA,SAAO,GAAG;AACZ;AAEO,gBAAS,eAAe,IAAoB;AACjD,QAAM,YAAY,CAAC,GAAW,SAC5B,GAAG,EAAE,eAAe,SAAS,EAAE,uBAAuB,EAAE,CAAC,IAAI;AAE/D,MAAI,KAAK,MAAM;AACb,WAAO,UAAU,KAAK,KAAK,IAAI;AAAA,EACjC;AACA,MAAI,KAAK,GAAG;AACV,WAAO,UAAU,KAAK,KAAK,OAAI;AAAA,EACjC;AACA,MAAI,KAAK,KAAK;AACZ,WAAO,UAAU,IAAI,IAAI;AAAA,EAC3B;AACA,QAAM,IAAI,KAAK;AACf,MAAI,IAAI,IAAI;AACV,WAAO,UAAU,KAAK,KAAK,GAAG;AAAA,EAChC;AACA,SAAO,UAAU,IAAI,IAAI,GAAG;AAC9B;AAIA,SAAS,kBAAkB,KAGzB;AACA,QAAM,oBAAoB,OAAO,KAAK,cAAc;AACpD,QAAM,sBACJ,qBACA,KAAK,KAAK,KAAK,QAAQ,iBAAiB,GAAG,aAAa;AAC1D,QAAM,mBACJ,uBAAuB,IAAI,GAAG,OAAO,mBAAmB,IACpD,sBACA;AACN,SAAO;AAAA,IACL;AAAA,IACA;AAAA,EACF;AACF;AAOA,SAAS,OAAO,KAAc,UAAsC;AAClE,MAAI,SAAS,KAAK,QAAQ,GAAG;AAC7B,MAAI,YAAY;AAChB,KAAG;AACD,UAAM,YAAY,KAAK,KAAK,QAAQ,QAAQ;AAC5C,QAAI,IAAI,GAAG,OAAO,SAAS,GAAG;AAC5B,aAAO;AAAA,IACT;AACA,aAAS;AACT,gBAAY,KAAK,QAAQ,MAAM;AAAA,EACjC,SAAS,cAAc;AACvB;AACF;AASA,sBAAsB,uBACpB,KACA,mBAAmB,OACnB;AACA,QAAM,EAAE,mBAAmB,iBAAiB,IAAI,kBAAkB,GAAG;AACrE,MAAI,CAAC,mBAAmB;AACtB,YAAQ;AAAA,MACN;AAAA,IACF;AACA,YAAQ,MAAM,oDAAoD;AAClE,UAAM,IAAI,WAAW,CAAC;AAAA,EACxB;AACA,MAAI,sBAAsB,KAAK,QAAQ,cAAc,GAAG;AACtD,YAAQ,MAAM,wDAAwD;AACtE,WAAO,MAAM,IAAI,WAAW,GAAG,IAAI;AAAA,EACrC;AACA,MAAI,oBAAoB,qBAAqB,CAAC,kBAAkB;AAC9D,UAAM,WAAW,MAAM,eAAe,GAAG;AACzC,YAAQ,MAAM,gCAAgC,UAAU;AAExD,UAAM,EAAE,UAAU,IAAI,MAAM,SAAS,OAAO;AAAA,MAC1C;AAAA,QACE,MAAM;AAAA,QACN,MAAM;AAAA,QACN,SAAS;AAAA,MACX;AAAA,IACF,CAAC;AAED,QAAI,CAAC,WAAW;AACd,cAAQ,MAAM,yDAAyD;AACvE,aAAO,MAAM,IAAI,WAAW,GAAG,IAAI;AAAA,IACrC;AAEA,UAAM,KAAK,KAAK,MAAM,IAAI;AAAA,EAC5B;AACF;",
  "names": []
}
