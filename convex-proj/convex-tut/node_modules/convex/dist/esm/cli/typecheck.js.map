{
  "version": 3,
  "sources": ["../../../src/cli/typecheck.ts"],
  "sourcesContent": ["import chalk from \"chalk\";\nimport { functionsDir, ensureHasConvexDependency } from \"./lib/utils\";\nimport { Command } from \"commander\";\nimport { readConfig } from \"./lib/config\";\nimport { typeCheckFunctions } from \"./lib/typecheck\";\nimport { oneoffContext } from \"./lib/context\";\n\n// Experimental (it's going to fail sometimes) TypeScript type checking.\n// Includes a separate command to help users debug their TypeScript configs.\n\nexport type TypecheckResult = \"cantTypeCheck\" | \"success\" | \"typecheckFailed\";\n\n/** Run the TypeScript compiler, as configured during  */\nexport const typecheck = new Command(\"typecheck\")\n  .description(\n    \"Run TypeScript typechecking on your Convex functions with `tsc --noEmit`.\"\n  )\n  .action(async () => {\n    const ctx = oneoffContext;\n    const { configPath, config: localConfig } = await readConfig(ctx, false);\n    await ensureHasConvexDependency(ctx, \"typecheck\");\n    const typecheckResult = await typeCheckFunctions(\n      ctx,\n      functionsDir(configPath, localConfig.projectConfig)\n    );\n    if (typecheckResult === \"typecheckFailed\") {\n      console.error(chalk.gray(\"Typecheck failed\"));\n      return await ctx.fatalError(1, \"fs\");\n    } else if (typecheckResult === \"cantTypeCheck\") {\n      console.error(\n        chalk.gray(\"Unable to typecheck; is TypeScript installed?\")\n      );\n      return await ctx.fatalError(1, \"fs\");\n    } else {\n      console.error(\n        chalk.green(\n          \"Typecheck passed: `tsc --noEmit` completed with exit code 0.\"\n        )\n      );\n      return await ctx.fatalError(0);\n    }\n  });\n"],
  "mappings": ";AAAA,OAAO,WAAW;AAClB,SAAS,cAAc,iCAAiC;AACxD,SAAS,eAAe;AACxB,SAAS,kBAAkB;AAC3B,SAAS,0BAA0B;AACnC,SAAS,qBAAqB;AAQvB,aAAM,YAAY,IAAI,QAAQ,WAAW,EAC7C;AAAA,EACC;AACF,EACC,OAAO,YAAY;AAClB,QAAM,MAAM;AACZ,QAAM,EAAE,YAAY,QAAQ,YAAY,IAAI,MAAM,WAAW,KAAK,KAAK;AACvE,QAAM,0BAA0B,KAAK,WAAW;AAChD,QAAM,kBAAkB,MAAM;AAAA,IAC5B;AAAA,IACA,aAAa,YAAY,YAAY,aAAa;AAAA,EACpD;AACA,MAAI,oBAAoB,mBAAmB;AACzC,YAAQ,MAAM,MAAM,KAAK,kBAAkB,CAAC;AAC5C,WAAO,MAAM,IAAI,WAAW,GAAG,IAAI;AAAA,EACrC,WAAW,oBAAoB,iBAAiB;AAC9C,YAAQ;AAAA,MACN,MAAM,KAAK,+CAA+C;AAAA,IAC5D;AACA,WAAO,MAAM,IAAI,WAAW,GAAG,IAAI;AAAA,EACrC,OAAO;AACL,YAAQ;AAAA,MACN,MAAM;AAAA,QACJ;AAAA,MACF;AAAA,IACF;AACA,WAAO,MAAM,IAAI,WAAW,CAAC;AAAA,EAC/B;AACF,CAAC;",
  "names": []
}
