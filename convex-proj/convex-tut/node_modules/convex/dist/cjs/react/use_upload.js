"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);
var use_upload_exports = {};
__export(use_upload_exports, {
  useUploadGeneric: () => useUploadGeneric
});
module.exports = __toCommonJS(use_upload_exports);
var import_react = require("../react/index.js");
function useUploadGeneric(name) {
  const generateUploadUrl = (0, import_react.useMutationGeneric)(name);
  return async (file) => {
    const postUrl = await generateUploadUrl();
    const res = await fetch(postUrl, {
      method: "POST",
      headers: { "Content-Type": file.type },
      body: file
    });
    if (res.status === 200) {
      const { storageId } = await res.json();
      return storageId;
    } else {
      const { code, message } = await res.json();
      console.error(`${res.status} ${res.statusText}: ${code}: ${message}`);
      throw new Error(`${res.status} ${res.statusText}: ${code}: ${message}`);
    }
  };
}
//# sourceMappingURL=use_upload.js.map
