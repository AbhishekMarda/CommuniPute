{
  "version": 3,
  "sources": ["../../../src/react/use_upload.ts"],
  "sourcesContent": ["import { GenericAPI, MutationNames } from \"../browser/index.js\";\nimport { StorageId } from \"../server/storage.js\";\nimport { useMutationGeneric } from \"../react/index.js\";\n\n/**\n * TODO(CX-2960) Use codegen to make non-generic version\n *\n * @internal\n */\nexport function useUploadGeneric<\n  API extends GenericAPI,\n  Name extends MutationNames<API>\n>(name: Name): (file: File) => Promise<StorageId> {\n  const generateUploadUrl = useMutationGeneric(name);\n\n  return async (file: File): Promise<StorageId> => {\n    const postUrl = await generateUploadUrl();\n    const res = await fetch(postUrl, {\n      method: \"POST\",\n      headers: { \"Content-Type\": file.type },\n      body: file,\n    });\n    if (res.status === 200) {\n      const { storageId } = await res.json();\n      return storageId;\n    } else {\n      const { code, message } = await res.json();\n      console.error(`${res.status} ${res.statusText}: ${code}: ${message}`);\n      throw new Error(`${res.status} ${res.statusText}: ${code}: ${message}`);\n    }\n  };\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA,mBAAmC;AAO5B,SAAS,iBAGd,MAAgD;AAChD,QAAM,wBAAoB,iCAAmB,IAAI;AAEjD,SAAO,OAAO,SAAmC;AAC/C,UAAM,UAAU,MAAM,kBAAkB;AACxC,UAAM,MAAM,MAAM,MAAM,SAAS;AAAA,MAC/B,QAAQ;AAAA,MACR,SAAS,EAAE,gBAAgB,KAAK,KAAK;AAAA,MACrC,MAAM;AAAA,IACR,CAAC;AACD,QAAI,IAAI,WAAW,KAAK;AACtB,YAAM,EAAE,UAAU,IAAI,MAAM,IAAI,KAAK;AACrC,aAAO;AAAA,IACT,OAAO;AACL,YAAM,EAAE,MAAM,QAAQ,IAAI,MAAM,IAAI,KAAK;AACzC,cAAQ,MAAM,GAAG,IAAI,UAAU,IAAI,eAAe,SAAS,SAAS;AACpE,YAAM,IAAI,MAAM,GAAG,IAAI,UAAU,IAAI,eAAe,SAAS,SAAS;AAAA,IACxE;AAAA,EACF;AACF;",
  "names": []
}
