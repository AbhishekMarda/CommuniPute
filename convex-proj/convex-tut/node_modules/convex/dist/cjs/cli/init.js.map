{
  "version": 3,
  "sources": ["../../../src/cli/init.ts"],
  "sourcesContent": ["import { Command } from \"commander\";\nimport { checkAuthorization, performLogin } from \"./lib/login.js\";\nimport path from \"path\";\nimport { Option } from \"commander\";\nimport { oneoffContext } from \"./lib/context.js\";\nimport { init as initLib } from \"./lib/init.js\";\n\nconst cwd = path.basename(process.cwd());\n\n/** Initialize a new Convex project. */\nexport const init = new Command(\"init\")\n  .description(\"Initialize a new Convex project in the current directory\")\n  .option(\n    \"--project <name>\",\n    `Name of the project to create. Defaults to \\`${cwd}\\` (the current directory)`\n  )\n  .addOption(\n    new Option(\n      \"--team <slug>\",\n      \"Slug identifier for the team this project will belong to.\"\n    )\n  )\n  .option(\n    \"--save-url\",\n    \"Save the production deployment URL to .env or .env.production.\"\n  )\n  .option(\n    \"--no-save-url\",\n    \"Do not save production deployment URL to a .env file.\"\n  )\n  .action(async options => {\n    const ctx = oneoffContext;\n\n    if (!(await checkAuthorization(ctx))) {\n      await performLogin(ctx);\n    }\n\n    const saveUrl =\n      options.saveUrl === true\n        ? \"yes\"\n        : options.saveUrl === false\n        ? \"no\"\n        : \"ask\";\n    await initLib(ctx, options.project, options.team, saveUrl);\n  });\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAAwB;AACxB,mBAAiD;AACjD,kBAAiB;AACjB,IAAAA,oBAAuB;AACvB,qBAA8B;AAC9B,kBAAgC;AAEhC,MAAM,MAAM,YAAAC,QAAK,SAAS,QAAQ,IAAI,CAAC;AAGhC,MAAM,OAAO,IAAI,yBAAQ,MAAM,EACnC,YAAY,0DAA0D,EACtE;AAAA,EACC;AAAA,EACA,gDAAgD;AAClD,EACC;AAAA,EACC,IAAI;AAAA,IACF;AAAA,IACA;AAAA,EACF;AACF,EACC;AAAA,EACC;AAAA,EACA;AACF,EACC;AAAA,EACC;AAAA,EACA;AACF,EACC,OAAO,OAAM,YAAW;AACvB,QAAM,MAAM;AAEZ,MAAI,CAAE,UAAM,iCAAmB,GAAG,GAAI;AACpC,cAAM,2BAAa,GAAG;AAAA,EACxB;AAEA,QAAM,UACJ,QAAQ,YAAY,OAChB,QACA,QAAQ,YAAY,QACpB,OACA;AACN,YAAM,YAAAC,MAAQ,KAAK,QAAQ,SAAS,QAAQ,MAAM,OAAO;AAC3D,CAAC;",
  "names": ["import_commander", "path", "initLib"]
}
