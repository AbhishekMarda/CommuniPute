{
  "version": 3,
  "sources": ["../../../src/cli/login.ts"],
  "sourcesContent": ["import { Command, Option } from \"commander\";\nimport chalk from \"chalk\";\nimport { oneoffContext } from \"./lib/context.js\";\nimport { checkAuthorization, performLogin } from \"./lib/login.js\";\n\nexport const login = new Command(\"login\")\n  .description(\"Login to Convex\")\n  // These options are hidden from the help/usage message, but allow overriding settings for testing.\n  .addOption(new Option(\"--override-auth-url <url>\").hideHelp())\n  .addOption(new Option(\"--override-auth-client <id>\").hideHelp())\n  .addOption(new Option(\"--override-auth-username <username>\").hideHelp())\n  .addOption(new Option(\"--override-auth-password <password>\").hideHelp())\n  .option(\n    \"--device-name <name>\",\n    \"Provide a name for the device being authorized\"\n  )\n  .option(\n    \"-f, --force\",\n    \"Proceed with login even if a valid access token already exists for this device\"\n  )\n  .option(\n    \"--no-open\",\n    \"Don't automatically open the login link in the default browser\"\n  )\n  .action(async (options, cmd: Command) => {\n    const ctx = oneoffContext;\n    if ((await checkAuthorization(ctx)) && !options.force) {\n      console.log(\n        chalk.green(\n          \"This device has previously been authorized and is ready for use with Convex.\"\n        )\n      );\n      return;\n    }\n    if (!!options.overrideAuthUsername !== !!options.overrideAuthPassword) {\n      cmd.error(\n        \"If overriding credentials, both username and password must be provided\"\n      );\n    }\n\n    await performLogin(\n      ctx,\n      options.overrideAuthUrl,\n      options.overrideAuthClient,\n      options.overrideAuthUsername,\n      options.overrideAuthPassword,\n      options.open,\n      options.deviceName\n    );\n  });\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAAgC;AAChC,mBAAkB;AAClB,qBAA8B;AAC9B,mBAAiD;AAE1C,MAAM,QAAQ,IAAI,yBAAQ,OAAO,EACrC,YAAY,iBAAiB,EAE7B,UAAU,IAAI,wBAAO,2BAA2B,EAAE,SAAS,CAAC,EAC5D,UAAU,IAAI,wBAAO,6BAA6B,EAAE,SAAS,CAAC,EAC9D,UAAU,IAAI,wBAAO,qCAAqC,EAAE,SAAS,CAAC,EACtE,UAAU,IAAI,wBAAO,qCAAqC,EAAE,SAAS,CAAC,EACtE;AAAA,EACC;AAAA,EACA;AACF,EACC;AAAA,EACC;AAAA,EACA;AACF,EACC;AAAA,EACC;AAAA,EACA;AACF,EACC,OAAO,OAAO,SAAS,QAAiB;AACvC,QAAM,MAAM;AACZ,MAAK,UAAM,iCAAmB,GAAG,KAAM,CAAC,QAAQ,OAAO;AACrD,YAAQ;AAAA,MACN,aAAAA,QAAM;AAAA,QACJ;AAAA,MACF;AAAA,IACF;AACA;AAAA,EACF;AACA,MAAI,CAAC,CAAC,QAAQ,yBAAyB,CAAC,CAAC,QAAQ,sBAAsB;AACrE,QAAI;AAAA,MACF;AAAA,IACF;AAAA,EACF;AAEA,YAAM;AAAA,IACJ;AAAA,IACA,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,QAAQ;AAAA,EACV;AACF,CAAC;",
  "names": ["chalk"]
}
